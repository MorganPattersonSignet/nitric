// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/nitric/cloud/gcp/runtime/resource (interfaces: GcpResourceProvider)

// Package mock_resource is a generated GoMock package.
package mock_resource

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGcpResourceProvider is a mock of GcpResourceProvider interface.
type MockGcpResourceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockGcpResourceProviderMockRecorder
}

// MockGcpResourceProviderMockRecorder is the mock recorder for MockGcpResourceProvider.
type MockGcpResourceProviderMockRecorder struct {
	mock *MockGcpResourceProvider
}

// NewMockGcpResourceProvider creates a new mock instance.
func NewMockGcpResourceProvider(ctrl *gomock.Controller) *MockGcpResourceProvider {
	mock := &MockGcpResourceProvider{ctrl: ctrl}
	mock.recorder = &MockGcpResourceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGcpResourceProvider) EXPECT() *MockGcpResourceProviderMockRecorder {
	return m.recorder
}

// GetProjectID mocks base method.
func (m *MockGcpResourceProvider) GetProjectID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProjectID indicates an expected call of GetProjectID.
func (mr *MockGcpResourceProviderMockRecorder) GetProjectID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectID", reflect.TypeOf((*MockGcpResourceProvider)(nil).GetProjectID))
}

// GetServiceAccountEmail mocks base method.
func (m *MockGcpResourceProvider) GetServiceAccountEmail() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceAccountEmail")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceAccountEmail indicates an expected call of GetServiceAccountEmail.
func (mr *MockGcpResourceProviderMockRecorder) GetServiceAccountEmail() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceAccountEmail", reflect.TypeOf((*MockGcpResourceProvider)(nil).GetServiceAccountEmail))
}
