// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/nitric/cloud/aws/runtime/resource (interfaces: AwsResourceProvider)

// Package mock_resource is a generated GoMock package.
package mock_resource

import (
	context "context"
	reflect "reflect"

	apigatewayv2 "github.com/aws/aws-sdk-go-v2/service/apigatewayv2"
	gomock "github.com/golang/mock/gomock"
	resource "github.com/nitrictech/nitric/cloud/aws/runtime/resource"
)

// MockAwsResourceProvider is a mock of AwsResourceProvider interface.
type MockAwsResourceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAwsResourceProviderMockRecorder
}

// MockAwsResourceProviderMockRecorder is the mock recorder for MockAwsResourceProvider.
type MockAwsResourceProviderMockRecorder struct {
	mock *MockAwsResourceProvider
}

// NewMockAwsResourceProvider creates a new mock instance.
func NewMockAwsResourceProvider(ctrl *gomock.Controller) *MockAwsResourceProvider {
	mock := &MockAwsResourceProvider{ctrl: ctrl}
	mock.recorder = &MockAwsResourceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAwsResourceProvider) EXPECT() *MockAwsResourceProviderMockRecorder {
	return m.recorder
}

// GetApiGatewayById mocks base method.
func (m *MockAwsResourceProvider) GetApiGatewayById(arg0 context.Context, arg1 string) (*apigatewayv2.GetApiOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiGatewayById", arg0, arg1)
	ret0, _ := ret[0].(*apigatewayv2.GetApiOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApiGatewayById indicates an expected call of GetApiGatewayById.
func (mr *MockAwsResourceProviderMockRecorder) GetApiGatewayById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiGatewayById", reflect.TypeOf((*MockAwsResourceProvider)(nil).GetApiGatewayById), arg0, arg1)
}

// GetResources mocks base method.
func (m *MockAwsResourceProvider) GetResources(arg0 context.Context, arg1 string) (map[string]resource.ResolvedResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResources", arg0, arg1)
	ret0, _ := ret[0].(map[string]resource.ResolvedResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResources indicates an expected call of GetResources.
func (mr *MockAwsResourceProviderMockRecorder) GetResources(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResources", reflect.TypeOf((*MockAwsResourceProvider)(nil).GetResources), arg0, arg1)
}
